package com.badr.Ecommerce_store_JEE.Controller;
/*
* Generated By IDEA
* User: Badr Eddine
* */


import com.badr.Ecommerce_store_JEE.Util.DB;
import com.badr.Ecommerce_store_JEE.beans.Product;

import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;
import javax.swing.*;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.sql.SQLException;
import java.util.Properties;
import java.util.function.Supplier;


@MultipartConfig(
		fileSizeThreshold = 1024 * 1024 * 1, // 1 MB
		maxFileSize = 1024 * 1024 * 10,      // 10 MB
		maxRequestSize = 1024 * 1024 * 100   // 100 MB
)
public class AdminController extends HttpServlet {
	private static final String TAG = "AdminController: ";
    private static final long serialVersionUID = 1L;
	private String admin;
	private String adminPassword;


	@Override
	public void init() throws ServletException {
		super.init();

		//NOTE: this done when servlet first get instantiated

		//get the app.properties file
		InputStream inputStream = getServletContext().getResourceAsStream("/WEB-INF/app.properties");
		Properties props = new Properties();
		try {
			props.load(inputStream);

		} catch (IOException e) {
			e.printStackTrace();
		}

		//Debug stuff
//		System.out.println(TAG + props.getProperty("admin"));
//		System.out.println(TAG + props.getProperty("adminPassword"));

		admin = props.getProperty("admin");
		adminPassword = props.getProperty("adminPassword");


	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String page = request.getParameter("page");
		if(page == null) {
			request.getRequestDispatcher("admin/login.jsp").forward(request, response);;
		}else {
			doPost(request, response);
		}
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String page = request.getParameter("page");
		if(page.equals("admin-login-form")) {
			String username = request.getParameter("username");
			String password = request.getParameter("password");

			//DONE:try another way to stored admin creds in xml config file or app.properties file
			//WOW look you read the README.md file this is nice


			//❌ hard coded admin account creds i know bad idea relax hhhhhh
			//✔ not anymore hhhhhh :)

			if(username.equals(admin) && password.equals(adminPassword)) {
				request.getRequestDispatcher("admin/index.jsp").forward(request, response);
			}
			else {
				request.setAttribute("msg", "Invalid Credentials");
				request.setAttribute("username", username);
				request.getRequestDispatcher("admin/login.jsp").forward(request, response);

			}
		}

		if(page.equals("delete")) {

			//same stuff here get id, query db bla bla  .....

			String id = request.getParameter("id");
			DB db = new DB();
			try {
				db.deleteProduct(id);
			} catch (SQLException e) {
				e.printStackTrace();
			}

			//display a mesg
			JOptionPane.showMessageDialog(
					((Supplier<JDialog>) () -> {
						final JDialog dialog = new JDialog();
						dialog.setAlwaysOnTop(true);
						return dialog;
					}).get(), "Product deleted !!!");

			request.getRequestDispatcher("admin/index.jsp").forward(request, response);

		}

		if(page.equals("index")) {
			request.getRequestDispatcher("admin/index.jsp").forward(request, response);
		}

		if(page.equals("addproduct")) {
			request.getRequestDispatcher("admin/addProduct.jsp").forward(request, response);
		}

		if(page.equals("edit")) {

			//get the id of the product to edit
			String id = request.getParameter("id");
			//query db
			DB account = new DB();
			Product p = null;
			try {
				 p = account.fetchProduct(id);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			//send product to jsp to display
			request.setAttribute("p", p);
			request.getRequestDispatcher("admin/editProduct.jsp").forward(request, response);

		}

		if(page.equals("edit_product")){
			//the id is a hidden input in the jsp page ....
			String id = request.getParameter("id");
			String name = request.getParameter("name");
			String price = request.getParameter("price");
			String category = request.getParameter("category");
			String featured = request.getParameter("featured");


			Product p = new Product();
			p.setId(Integer.parseInt(id));
			p.setName(name);
			p.setPrice(price);
			p.setCategory(category);
			p.setFeatured(featured);


			DB account = new DB();
			try {
				account.updateProduct(p);
			} catch (SQLException e) {
				e.printStackTrace();
			}

			request.getRequestDispatcher("admin/index.jsp").forward(request, response);

		}

		if(page.equals("add_product")){
			//DONE: fix the img upload dannnng hhhhhh
			//this upload shit is too complexx whyyyyyyyy like why god ilv spring

			Product p = new Product();

			String name = request.getParameter("name");
			String price = request.getParameter("price");
			String category = request.getParameter("category");
			String featured = request.getParameter("featured");
			p.setName(name);
			p.setPrice(price);
			p.setCategory(category);
			p.setFeatured(featured);

			//ok so the problem was the servlet api version, in V 3.0 and less yoou dont have access
			//method getSubmittedFileName() and that's a big afing problem
			//so use version 4.0 and call it a day and yeah java file system manipulation
			//is shit even the NIO package
			//you need to get the upload path by getting the apps realpath in the web server from context
			//then make a File object using the uploadPath then if it doesn't exist then mkdir
			//


			String uploadPath = getServletContext().getRealPath("") + File.separator + "img";
			File uploadDir = new File(uploadPath);
			if (!uploadDir.exists()){
				uploadDir.mkdir();
			}
			String fileName = "";

			for (Part part : request.getParts()) {

				fileName = part.getSubmittedFileName();

				System.out.println(uploadPath);
				System.out.println(fileName);
				//check if filename is not empty this done to bypass the other form data :(
				if (fileName != null){
					part.write(uploadPath + File.separator + fileName);
				}

			}
			p.setImage("img/"+fileName);

			DB account = new DB();
			try {
				account.addProduct(p);
			} catch (SQLException e) {
				e.printStackTrace();
			}
			request.getRequestDispatcher("admin/index.jsp").forward(request, response);
		}
	}



}
